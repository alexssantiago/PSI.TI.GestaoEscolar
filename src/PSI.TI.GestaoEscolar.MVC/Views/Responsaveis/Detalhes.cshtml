@using PSI.TI.GestaoEscolar.MVC.Extensions
@model PSI.TI.GestaoEscolar.Application.ViewModels.ResponsavelViewModel

@{
    ViewData["Title"] = "Responsável";
}

<h1>@ViewData["Title"]</h1>

<div>
    <h4>Informações somente leitura</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Nome)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Nome)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Cpf)
        </dt>
        <dd class="col-sm-10">
            @this.FormatarCpf(Model.Cpf)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ocupacao)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Ocupacao)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Renda)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Renda)
        </dd>
    </dl>
</div>
<div>
    <a class="btn btn-info" asp-action="Index">Voltar</a>
</div>

<div id="Target">
    <partial name="_ListaDependentes" model="@Model.Dependentes" />
</div>

<p>
    <a class="btn btn-info" asp-controller="Dependentes" asp-action="Cadastrar" asp-route-responsavelId="@Model.Id" data-modal="">Novo Dependente</a>
</p>

<div id="myModal" class="modal fade in">
    <div class="modal-dialog">
        <div class="modal-content">
            <div id="myModalContent"></div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            AjaxModal();
        });
    </script>
}